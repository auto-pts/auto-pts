Tester protocol for Bluetooth stack
***********************************

Copyright (C) 2021  Codecoup
Copyright (C) 2015  Intel Corporation


Overview
========

This document describes the format of data used for communicating between tester
and implementation under test (IUT).

The protocol is SOCK_STREAM based and follows a strict PDU specification
with a generic header and initial registration exchange. The communication is
driven from tester with commands/response exchange. The protocol is single PDU
exchanged based, meaning every command requires a response. IUT will use events
to signal notifications.

Commands and events use single socket. All services are multi-plexed over same
socket.

	.--  IUT  --.                             .--Tester--.
	|           |                             |          |
	|           |          Command            |          |
	|           | <-------------------------- |          |
	|           |                             |          |
	|           |          Response           |          |
	|           | --------------------------> |          |
	|           |                             |          |
	|           |           Event             |          |
	|           | --------------------------> |          |
	|           |                             |          |
	'-----------'                             '----------'


Packet Structures
=================

Every packet will follow the basic header to support simple multi-plexing
over the same socket. It will also support a basic control channel with service
id 0. Due to use of single socket for command/response and events it is
possible that event(s) will be received before response to command.

	0            8       16                  24            40
	+------------+--------+------------------+-------------+
	| Service ID | Opcode | Controller Index | Data Length |
	+------------+--------+------------------+-------------+
	|                                                      |

The unique service ID is assigned by this specification for each service
supported by tester.

As general rule of thumb, the opcode for command matches the opcode for a
response. Or the opcode 0x00 for an error is returned.

Events opcodes start from 0x80.

All fields are in little-endian byte order (least significant byte first).

Controller Index can have a special value <non-controller> to indicate that
command or event is not related to any controller. Possible values:

	<controller id>		0x00 to 0xFE
	<non-controller>	0xFF

Error response is common for all services and has fixed structure:

	Opcode 0x00 - Error response

		Response parameters: Status (1 octet)

		Valid status values:	0x01 = Fail
					0x02 = Unknown Command
					0x03 = Not ready
					0x04 = Invalid Index

Core Service (ID 0)
===================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Read Supported Services command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported services> (variable)

		Each bit in response is a flag indicating if service with ID
		matching bit number is supported. Bit set to 1 means that
		service is supported. If specific bit is not present in response
		(less than required bytes received) it shall be assumed that
		service is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Register Service command/response

		Controller Index:	<non-controller>
		Command parameters:	Service ID (1 octet)
		Response parameters:	<none>

		In case a command is sent for an undeclared service ID, it will
		be rejected. Also there will be no events for undeclared
		service ID.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Unregister Service command/response

		Controller Index:	<non-controller>
		Command parameters:	Service ID (1 octet)
		Response parameters:	<none>

		In case of an error, the error response will be returned.

	Opcode 0x05 - Log message at IUT

		Controller Index:	<non-controller>
		Command parameters:	Log_Message_Length (2 Octets)
					Log_Message (variable)
		Response parameters:	<none>

		In case of an error, the error response will be returned.

	Opcode 0x06 - Read BTP MTU

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	BTP_MTU (2 octets)

		This allows to read BTP protocol MTU on OUT device. MTU is maximum
		number of bytes that IUT can receive or send (including BTP header).

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - IUT ready event

		Controller Index:	<non-controller>
		Event parameters:	<none>

		This event indicates that IUT has been initialized and is ready to
		receive BTP commands.
		Tester shall wait for this event before sending any command to the IUT.

GAP Service (ID 1)
==================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Read Controller Index List command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	Number of Controllers (1 octet)
					Controller Index[i] (1 octet)

		This command returns the list of controllers.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Read Controller Information command/response

	Controller Index:	<controller id>
	Command parameters:	<none>
	Response parameters:	Address (6 Octets)
				Supported_Settings (4 Octets)
				Current_Settings (4 Octets)
				Class_Of_Device (3 Octets)
				Name (249 Octets)
				Short_Name (11 Octets)

		This command is used to retrieve the current state and basic
		information of a controller. It is typically used right after
		getting the response to the Read Controller Index List command

		Current_Settings and Supported_Settings is a bitmask with
		currently the following available bits:

			0	Powered
			1	Connectable
			2	Fast Connectable
			3	Discoverable
			4	Bondable
			5	Link Level Security (Sec. mode 3)
			6	Secure Simple Pairing
			7	Basic Rate/Enhanced Data Rate
			8	High Speed
			9	Low Energy
			10	Advertising
			11	Secure Connections
			12	Debug Keys
			13	Privacy
			14	Controller Configuration
			15	Static Address
			16	Secure Connections Only

		In case of an error, the error response will be returned.

	Opcode 0x04 - Reset command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	Current_Settings (4 Octets)

		This allows to clean up any state data (eg. keys) and restore
		controller to its default system state.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Set Powered command/response

		Controller Index:	<controller id>
		Command parameters:	Powered (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Powered values:	0x00 = Off
					0x01 = On

		This command is used to power on or off a controller.

		In case of an error, the error response will be returned.

	Opcode 0x06 - Set Connectable command/response

		Controller Index:	<controller id>
		Command parameters:	Connectable (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Connectable values:	0x00 = Off
						0x01 = On

		This command is used to set controller connectable.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Set Fast Connectable command/response

		Controller Index:	<controller id>
		Command parameters:	Fast Connectable (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Fast Connectable values:	0x00 = Off
						0x01 = On

		This command is used to set controller fast connectable.
		This command is only available for BR/EDR capable controllers.

		In case of an error, the error response will be returned.

	Opcode 0x08 - Set Discoverable command/response

		Controller Index:	<controller id>
		Command parameters:	Discoverable (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Discoverable values:	0x00 = Off
						0x01 = General Discoverable
						0x02 = Limited Discoverable

		This command is used to set controller discoverable.

		In case of an error, the error response will be returned.

	Opcode 0x09 - Set Bondable command/response

		Controller Index:	<controller id>
		Command parameters:	Bondable (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Bondable values:	0x00 = Off
					0x01 = On

		This command is used to set controller bondable.

		In case of an error, the error response will be returned.

	Opcode 0x0a - Start Advertising command/response

		Controller Index:	<controller id>
		Command parameters:	Adv_Data_Len (1 octet)
					Scan_Rsp_len (1 octet)
					Adv_Data (0-255 octets)
					Scan_Rsp (0-255 octets)
					Duration (4 octets)
					Own_Addr_Type (1 octet)
		Return Parameters:	Current_Settings (4 Octets)

		Valid Own_Addr_Type parameter values:
					0x00 = Identity Address
					0x01 = Resolvable Private Address
					0x02 = Non-resolvabe Private Address

		This command is used to start advertising.

		Adv_Data and Scan_Rsp are a list of { AD_Type, AD_Len, AD_DATA } structures.

		When Duration parameter value equals UINT32_MAX then the
		advertising duration is disabled.

		In case of an error, the error response will be returned.

	Opcode 0x0b - Stop Advertising command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Return Parameters:	Current_Settings (4 Octets)

		This command is used to stop advertising.

		In case of an error, the error response will be returned.

	Opcode 0x0c - Start Discovery command/response

		Controller Index:	<controller id>
		Command parameters:	Flags (1 octet)
		Return Parameters:	<none>

		Possible values for the Flags parameter are a bit-wise or
		of the following bits:
					0 = LE scan
					1 = BR/EDR scan
					2 = Use limited discovery procedure
					3 = Use active scan type
					4 = Use observation procedure
					5 = Use own ID address

		This command is used to start discovery.

		Observation Procedure allows to receive advertisements
		(and scan responses) from broadcasters (that are not visible
		during General or Limited discovery, because those are not
		discoverable). This procedure can use either passive or active
		scan type. If "Use observation procedure" (bit 4) is set,
		"Use limited discovery procedure" (bit 2) is excluded.

		In case of an error, the error response will be returned.

	Opcode 0x0d - Stop Discovery command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Return Parameters:	<none>

		This command is used to stop discovery.

		In case of an error, the error response will be returned.

	Opcode 0x0e - Connect command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Own_Addr_Type (1 octet)
		Return Parameters:	<none>

		Valid Own_Addr_Type parameter values:
					0x00 = Identity Address
					0x01 = Resolvable Private Address
					0x02 = Non-resolvabe Private Address

		This command is used to create a Link Layer connection with
		remote device.
		Address '00:00:00:00:00:00' and type '0' will attempt to
		use address from filter accept list.

		In case of an error, the error response will be returned.

	Opcode 0x0f - Disconnect command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Return Parameters:	<none>

		Valid Address_Type parameter values:
					0x00 = Public
					0x01 = Random

		This command is used to terminate an existing connection or
		to cancel pending connection attempt.

		In case of an error, the error response will be returned.

	Opcode 0x10 - Set IO Capability command/response

		Controller Index:	<controller id>
		Command parameters:	IO_Capability (1 octet)
		Return Parameters:	<none>

		Valid IO_Capabilities parameter values:
					0x00 = Display Only
					0x01 = Display Yes/No
					0x02 = Keyboard Only
					0x03 = No Input, No Output
					0x04 = Keyboard Display

		This command is used to set IO capability.

		In case of an error, the error response will be returned.

	Opcode 0x11 - Pair command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Return Parameters:	<none>

		This command is used to initiate security with remote. If
		peer is already paired IUT is expected to enable security
		(encryption) with peer. If peer is not paired IUT shall
		start pairing process.

		In case of an error, the error response will be returned.

	Opcode 0x12 - Unpair command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Return Parameters:	<none>

		This command is used to unpair with remote.

		In case of an error, the error response will be returned.

	Opcode 0x13 - Passkey Entry Response command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Passkey (4 octets)
		Return Parameters:	<none>

		This command is used to response with passkey for pairing
		request.

		In case of an error, the error response will be returned.

	Opcode 0x14 - Passkey Confirmation Response command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Match (1 octet)
		Return Parameters:	<none>

		This command is used to response for pairing request with
		confirmation in accordance with initiator and responder
		passkey.

		In case of an error, the error response will be returned.

	Opcode 0x15 - Start Directed advertising command/response

		Controller Index:	<controller id>
		Command parameters:	Directed_address_Type (1 octet)
					Directed_address (6 octets)
					Options (2 octets)
		Return Parameters:	Current_Settings (4 Octets)

		This command is used to start directed advertising.

		Available options:
		bit 0 - High Duty - If set then High Duty cycle is used,
			otherwise Low Duty cycle is used for advertising
		bit 1 - Own ID Address - If set IUT is required to advertise
			using ID address even if privacy is enabled
		bit 2 - Peer RPA Address - If set IUT is expected to use peer
			RPA as target address (is supported by peer).

		Possible values for the High duty parameter are:
					0 = Use low duty cycle
					1 = Use high duty cycle

		In case of an error, the error response will be returned.

	Opcode 0x16 - Connection Parameters Update

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Connection Interval Min (2 octets)
					Connection Interval Max (2 octets)
					Connection Latency (2 octets)
					Supervision Timeout (2 octets)
		Return Parameters:	<none>

		This command is used to change connection parameters. If current
		connection parameters do not match with the ones requested then
		the IUT should send a Connection Parameter Update Request
		to a peer device.

		In case of an error, the error response will be returned.

	Opcode 0x17 - Pairing Consent Response command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Consent (1 octet)
		Return Parameters:	<none>

		This command is used to response for Pairing Consent Request event.

		In case of an error, the error response will be returned.

	Opcode 0x18 - OOB Legacy Set Data command/response

		Controller Index:	<controller id>
		Command parameters:	OOB_data (16 octets)
		Return Parameters:	<none>

		This command is used to set legacy OOB data.

		In case of an error, the error response will be returned.

	Opcode 0x19 - OOB SC Get Local Data command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Return Parameters:	Rand (16 octets)
		                    Conf (16 octets)

		This command is used to get local OOB Secure Connections data.

		In case of an error, the error response will be returned.

	Opcode 0x1a - OOB SC Set Remote Data command/response

		Controller Index:	<controller id>
		Command parameters:	 Rand (16 octets)
		                     Conf (16 octets)
		Return Parameters:	<none>

		This command is used to set remote OOB Secure Connections data.

		In case of an error, the error response will be returned.

	Opcode 0x1b - Set MITM command/response

		Controller Index:	<controller id>
		Command parameters:	 mitm (1 octet)
		Return Parameters:	<none>

		This command is used to set MITM setting.

		In case of an error, the error response will be returned.

	Opcode 0x1c - Set filter accept list command/response

		Controller Index: <controller id>

		Command parameters:	Type_Addr_Count (1 octet)
					[array] Type_Addr

		Object Type_Addr is defined as:
					Address_Type (1 octet)
					Address (6 octets)

		This command is used to set filter accept list.
		When set, connect with address: '00:00:00:00:00:00'
		and type '0' to use addresses from the list.

		In case of an error, the error response will be returned.

	Opcode 0x1d - Set Privacy command/response

		Controller Index:	<controller id>
		Command parameters:	 Privacy_Setting (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid Privacy_Setting values:	0x00 = Off
						0x01 = On

		This command is used to set Privacy setting. This command
		is designed for systems that allow to change privacy setting
		during runtime of the system.

		In case of an error, the error response will be returned.

	Opcode 0x1e - Set SC Only command/response

		Controller Index:	<controller id>
		Command parameters:	 SC_Only_Setting (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid SC_Only_Setting values:	0x00 = Off
						0x01 = On

		This command is used to set SC Only setting. This command
		is designed for systems that allow to change SC Only setting
		during runtime of the system.

		In case of an error, the error response will be returned.

	Opcode 0x1f - Set Secure Connections command/response

		Controller Index:	<controller id>
		Command parameters:	 SC_Setting (1 octet)
		Response parameters:	Current_Settings (4 Octets)

		Valid SC_Only_Setting values:	0x00 = Disable
						0x01 = Enable

		This command is used to enable/disable Secure Connections setting.
		This command is designed for systems that allow to change Secure
		Connections setting during runtime of the system.

		In case of an error, the error response will be returned.

	Opcode 0x20 - Set Minimum Encryption Key Size command/response

		Controller Index:	<controller id>
		Command parameters:	Encryption_Key_Size (1 octet)
		Response parameters:	<none>

		This command is used to set minimum Encryption Key Size for
		security procedure.

		Possible values for Encryption_Key_Size parameter are:
								<0x07, 0x0f>

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - New Settings event

		Controller Index:	<controller id>
		Event parameters:	Current_Settings (4 octets)

		This event indicates that one or more of the settings for a
		controller has changed.

	Opcode 0x81 - Device Found event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					RSSI (1 octet)
					Flags (1 octet)
					EIR_Data_Length (2 Octets)
					EIR_Data (0-65535 Octets)

		Possible values for the Flags parameter are a bit-wise or
		of the following bits:
					0 = RSSI valid
					1 = Adv_Data included
					2 = Scan_Rsp included

		This event indicates that a device was found during device
		discovery.

	Opcode 0x82 - Device Connected event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Connection Interval (2 octets)
					Connection Latency (2 octets)
					Supervision Timeout (2 octets)

		This event indicates that a device was connected.

	Opcode 0x83 - Device Disconnected event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)

		This event indicates that a device was disconnected.

	Opcode 0x84 - Passkey Display event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Passkey (4 octets)

		This event indicates that passkey was received and it needs to
		be confirmed on remote side.

	Opcode 0x85 - Passkey Enter Request event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)

		This event indicates that remote requests for passkey enter.

	Opcode 0x86 - Passkey Confirm Request event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Passkey (4 octets)

		This event indicates that passkey needs to be confirmed.

	Opcode 0x87 - Identity Resolved event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Identity_Address_Type (1 octet)
					Identity_Address (6 octets)

		This event indicates that the remote Identity Address has been
		resolved.

	Opcode 0x88 - Connection Parameters Update event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Connection Interval (2 octets)
					Connection Latency (2 octets)
					Supervision Timeout (2 octets)

		This event can be sent when the connection parameters have changed.

	Opcode 0x89 - Security Level Changed event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Security Level (1 octet)

		Possible values for the Security Level parameter map to those
		defined in Core Specification in LE security mode 1:
					1 = Unauthenticated pairing with encryption
					2 = Authenticated pairing with encryption
					3 = Authenticated LE Secure Connections pairing
					with encryption using a 128-bit strength encryption key

		This event can be sent when the Security Level has changed.

	Opcode 0x8a - Pairing Consent Request event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)

		This event can be sent when the IUT requires a pairing consent
		from the user.

	Opcode 0x8b - Bond Lost event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
							Address (6 octets)

		This event can be sent when IUT lost a bond with a peer device.

	Opcode 0x8c - Pairing Failed event

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
							Address (6 octets)
							Reason (1 octet)

		This event can be sent when IUT pairing procedure fails with
		specified reason.

GATT Service (ID 2, DEPRECATED)
===================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Add Service

		Controller Index:	<controller id>
		Command parameters:	Type (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	Service_ID (2 octets)

		Valid Type parameter values:
					0x00 = Primary
					0x01 = Secondary

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This command is used to add new service to GATT Server.
		Service ID of service declaration is returned in the response.
		Attribute database shall be initiated sequentially.
		After this issuing this command tester shall add characteristics
		or included services this service contains.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Add Characteristic

		Controller Index:	<controller id>
		Command parameters:	Service_ID (2 octets)
					Properties (1 octet)
					Permissions (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	Characteristic_ID (2 octets)

		Possible values for Service_ID:
					0x0000 = Add in sequence
					0x0001-0xffff = Add to service

		Possible response parameters:
					0x0000 = Relative ID, will be set after
					start_server
					0x0001-0xffff = ID in db

		Possible values for the Properties parameter are a bit-wise
		of the following bits:

			0	Broadcast
			1	Read
			2	Write Without Response
			3	Write
			4	Notify
			5	Indicate
			6	Authenticated Signed Writes
			7	Extended Properties

		Possible values for the Permissions parameter are a bit-wise
		of the following bits:

			0	Read
			1	Write
			2	Read with Encryption
			3	Write with Encryption
			4	Read with Authentication
			5	Write with Authentication
			6	Read with Authorization
			7	Write with Authorization

		This command is used to add new characteristic to GATT Server.
		Characteristic ID of characteristic declaration is returned in
		the response.
		Attribute's database shall be initiated sequentially.
		After issuing this command tester can add descriptors to this
		characteristic.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Add Descriptor

		Controller Index:	<controller id>
		Command parameters:	Characteristic_ID (2 octets)
					Permissions (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	Descriptor_ID (2 octets)

		Possible values for Characteristic_ID:
					0x0000 = Add in sequence
					0x0001-0xffff = Add to characteristic

		Possible response parameters:
					0x0000 = Relative ID, will be set after
					start_server
					0x0001-0xffff = ID in db

		This command is used to add new characteristic descriptor
		to GATT Server. The command shall be used right after
		Add Characteristic or previous Add Descriptor command.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Add Included Service

		Controller Index:	<controller id>
		Command parameters:	Service_ID (2 octets)
		Response parameters:	Included_Service_ID (2 octets)

		This command is used to add new included service declaration
		to GATT Server. Service that is going to be included has to be
		already added to the server. Attribute_ID of include
		declaration is returned in the response.

		In case of an error, the error response will be returned.

	Opcode 0x06 - Set Characteristic/Descriptor Value

		Controller Index:	<controller id>
		Command parameters:	Attribute_ID (2 octets)
					Value_Length (2 octet)
					Value (1-512 octets)
		Response parameters:	<none>

		Possible values for Characteristic_ID:
					0x0000 = Set last attribute in db value
					0x0001-0xffff = Set value of attribute
					under ID

		This command is used to set the value of characteristic
		or descriptor.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Start Server

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	Database_Attribute_Offset (2 octets)
					Database_Attribute_Count (1 octet)

		This command is used to start server with previously prepared
		attributes database. Device database may contain predefined
		attributes. Predefined attributes should be registered before
		attempt to register sequential database.
		Subsequent calls of this command shall return an error.

		In case of an error, the error response will be returned.

	Opcode 0x08 - Reset Server

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	<none>

		This command is used to clear the server from attributes.

		In case of an error, the error response will be returned.

	Opcode 0x09 - Set Required Encryption Key Size

		Controller Index:	<controller id>
		Command parameters:	Attribute_ID (2 octets)
					Encryption_Key_Size (1 octet)
		Response parameters:	<none>

		Possible values for Attribute_ID:
					0x0000 = Set encryption key of last
					added attribute
					0x0001-0xffff = Set enctryption of
					attribute under ID

		This command is used to set required Encryption Key Size of an
		attribute. It shall be used only if encryption or authentication
		is needed to have access to this attribute. Otherwise an error
		shall be returned.

		Possible values for Encryption_Key_Size parameter are:
								<0x07, 0x0f>

		In case of an error, the error response will be returned.

	Opcode 0x0a - Exchange MTU

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Response parameters:	<none>

		This command is used by GATT Client to configure ATT protocol.
		IUT is expected to send Exchange MTU Request to negotiate
		MTU size.

		In case of an error, the error response will be returned.

	Opcode 0x0b - Discover All Primary Services

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Response parameters:	Services_Count (1 octet)
					[array] Service (variable)

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover all primary
		services on a server.
		Services found during discovery are returned in the response.

		In case of an error, the error response will be returned.

	Opcode 0x0c - Discover Primary Service by UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	Services_Count (1 octet)
					[array] Service (variable)

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover primary services
		with specific UUID on a server.
		Services found during discovery are returned in the response.

		In case of an error, the error response will be returned.

	Opcode 0x0d - Find Included Services

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Service_Start_Handle (2 octets)
					Service_End_Handle (2 octets)
		Response parameters:	Services_Count (1 octet)
					[array] Included_Service (variable)

		Object Included_Service is defined as:
					Included_Handle (2 octets)
					Type (1 octet)
					Service (7 or 21 octets)

		Valid Type parameter values:
					0x00 = Primary
					0x01 = Secondary

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover service
		relationships to other services.
		Services found during discovery are returned in the response.

	Opcode 0x0e - Discover All Characteristics of a Service

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Service_Start_Handle (2 octets)
					Service_End_Handle (2 octets)
		Response parameters:	Characteristics_Count (1 octet)
					[array] Characteristic (variable)

		Object Characteristic is defined as:
					Characteristic_Handle (2 octets)
					Value_Handle (2 octets)
					Properties (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover all
		characteristics within specified service range.
		Characteristics found during discovery are returned in the
		response.

		In case of an error, the error response will be returned.

	Opcode 0x0f - Discover Characteristics by UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	Characteristics_Count (1 octet)
					[array] Characteristic (variable)

		Object Characteristic is defined as:
					Characteristic_Handle (2 octets)
					Value_Handle (2 octets)
					Properties (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover characteristic
		declarations with given UUID on a server.
		Characteristics found during discovery are returned in the
		response.

		In case of an error, the error response will be returned.

	Opcode 0x10 - Discover All Characteristic Descriptors

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
		Response parameters:	Descriptors_Count (1 octet)
					[array] Descriptor (variable)

		Object Descriptor is defined as:
					Descriptor_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used by a client to discover all the
		characteristic descriptors contained within characteristic.
		Descriptors found during discovery are returned in the
		response.

		In case of an error, the error response will be returned.

	Opcode 0x11 - Read Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
		Response parameters:	ATT_Response (1 octet)
					Data_Length (2 octets)
					Data (variable)

		This procedure is used to read a Characteristic Value or
		Characteristic Descriptor from a server.
		Read results are returned in the response to this command.
		ATT_Response shall be set to 0x00, if Read has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x12 - Read Using Characteristic UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	ATT_Response (1 octet)s
					Characteristic_Value_Count (1 octets)
					Characteristic_Value list (variable)

		Characteristic_Value:   Handle (2 octets)
					Data_Length (1 octets)
					Data (variable)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used to read a Characteristic Value from a
		server when characteristic UUID is known.
		Read results are returned in the response to this command.
		ATT_Response shall be set to 0x00, if Read has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x13 - Read Long Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
		Response parameters:	ATT_Response (1 octet)
					Data_Length (2 octets)
					Data (variable)

		This procedure is used to read Long Characteristic Value or
		Long Characteristic Descriptor from a server.
		Read results are returned in the response to this command.
		ATT_Response shall be set to 0x00, if Read has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x14 - Read Multiple Characteristic Values

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handles_Count (1 octet)
					Handles (variable)
		Response parameters:	ATT_Response (1 octet)
					Data_Length (2 octets)
					Data (variable)

		This procedure is used to read multiple Characteristic Values
		from a server.
		Read results are returned in the response to this command.
		ATT_Response shall be set to 0x00, if Read has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x20 - Read Multiple Variable Length Characteristic Values

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handles_Count (1 octet)
					Handles (variable)
		Response parameters:	ATT_Response (1 octet)
					Total_Data_Length (2 octets)
					Data (variable)

		This procedure is used to read multiple variable length
		Characteristic Values from a server.
		Read results are returned in the response to this command in
		form of {Length, Value} tuples. The Total_Data_Length is total
		length of response data (sum of lengths of all tuples}.
		ATT_Response shall be set to 0x00, if Read has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x15 - Write Without Response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value to a
		server. There is no acknowledgment that the write was
		successfully performed.

		In case of an error, the error response will be returned.

	Opcode 0x16 - Signed Write Without Response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value to a
		server. There is no acknowledgment that the write was
		successfully performed. This procedure is intended to be used
		if client and server are bonded, and connected using
		non-encrypted link.

		In case of an error, the error response will be returned.

	Opcode 0x17 - Write Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	ATT_Response (1 octet)

		This procedure is used to write a Characteristic Value or
		Characteristic Descriptor to a server.
		ATT_Response shall be set to 0x00, if Write has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x18 - Write Long Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	ATT_Response (1 octet)

		This procedure is used to write a Long Characteristic Value or
		Long Characteristic Descriptor to a server.
		ATT_Response shall be set to 0x00, if Write has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x19 - Reliable Write

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	ATT_Response (1 octet)

		This procedure is used to write a Characteristic Value to
		a server and assurance is required that the correct
		Characteristic Value is going to be written.
		ATT_Response shall be set to 0x00, if Write has been completed
		successfully. Otherwise it shall be set to ATT error code
		received.

		In case of an error, the error response will be returned.

	Opcode 0x1a - Configure Notifications

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Enable (1 octet)
					CCC_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used to configure server to notify
		characteristic value to a client.

		In case of an error, the error response will be returned.

	Opcode 0x1b - Configure Indications

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Enable (1 octet)
					CCC_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used to configure server to indicate
		characteristic value to a client.

		In case of an error, the error response will be returned.

	Opcode 0x1c - Get Attributes

		Controller Index:	<controller id>
		Command parameters:	Start Handle (2 octets)
					End Handle (2 octets)
					Type_Length (1 octet)
					Type (2 or 16 octets)
		Response parameters:	Attributes_Count (1 octet)
					[array] Attribute (variable)

		Object Attribute is defined as:
					Handle (2 octets)
					Permission (1 octet)
					Type_Length (1 octet)
					Type (2 or 16 octets)

		Valid Type_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used to query GATT Server for attributes based
		on given search pattern. Attributes can be searched using
		Attribute Handle range and Attribute Type.

		In case of an error, the error response will be returned.

	Opcode 0x1d - Get Attribute Value

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
		Response parameters:	ATT_Response (1 octet)
					Value_Length (2 octet)
					Value (variable)

		This procedure is used to query GATT Server for attribute value.
		In case of long attribute value, multiple responses will be
		sent. BTP_STATUS_SUCCESS response indicates the procedure is
		finished.

		In case of an error, the error response will be returned.

	Opcode 0x1e - Change Database

		Controller Index:	<controller id>
		Command parameters:	Start Handle (2 octets)
		            End Handle (2 octets)
		            Visibility (1 octet)
		Response parameters:	<none>

		This procedure is used to change the visibility of a portion
		of a GATT database. BTP_STATUS_SUCCESS response indicates
		the procedure is finished.

		In case of an error, the error response will be returned.

	Opcode 0x1f - Connect EATT channels

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Number_Of_Channels (1 octet)
		Response parameters:	<none>

		This procedure is used to connect EATT channels.
		BTP_STATUS_SUCCESS response indicates the procedure is finished.

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - Notification/Indication Received

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Type (1 octet)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)

		Valid Type parameter values:
					0x01 = Notification
					0x02 = Indication

		This event indicates that IUT has received notification
		or notification.

	Opcode 0x81 - Attribute Value Changed

		Controller Index:	<controller id>
		Event parameters:	Attribute_ID (2 octets)
					Data_Length (2 octet)
					Data (1-512 octets)

		This event command is used to indicate attribute
		(characteristic or descriptor) value changed.
		Event is triggered when ATT Write operation to Tester GATT
		Server has been performed successfully.

L2CAP Service (ID 3)
==================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Connect command/response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					PSM (2 octets)
					MTU (2 octets)
					Num (1 octet)
					Options (1 octet)
		Response parameters:	Num (1 octet)
					Chan_IDs (1 octet x num of channels created)

		This command is used to create an L2CAP channel.
		Chan_ID is returned in the response to this command to allow
		cancellation of this connection request using Disconnect
		command.
		Connected Event (or Disconnected Event in case of an error)
		shall be expected after issuing this command.

		if Num > 1 then Enhanced Credit Based L2CAP channels shall be created.
		Return value will contain a list of Chan_IDs that were created by
		this command.

		Available options:
		bit 0 - ECFC - If set then Enhanced Credit Based L2CAP channel
			shall be created even if Num == 1. This is used to
			create single Enhanced CFC channel. This flag must be
			set to 1 when Num > 1.
		bit 1 - Hold Credit - If set IUT is required to hold returning at
			least 1 credit until Credits command is received.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Disconnect command

		Controller Index:	<controller id>
		Command parameters:	Chan_ID (1 octet)
		Response parameters:	<none>

		This command is used to close an L2CAP channel.
		Chan_ID is the internal application number that identifies
		L2CAP channel.
		Disconnected Event shall be expected after issuing this command.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Send Data command

		Controller Index:	<controller id>
		Command parameters:	Chan_ID (1 octet)
					Data_Length (2 octets)
					Data (Data_Length octets)
		Response parameters:	<none>

		This command is used to send data over L2CAP channel.
		Chan_ID is the internal application number that identifies
		L2CAP channel.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Listen command

		Controller Index:	<controller id>
		Command parameters:	PSM (2 octets)
					Transport (1 octet)
					MTU (2 octets)
					Security_Type (1 octet)
					Key_Size (1 octet)
					Response (2 octets)
		Response parameters:	<none>

		Valid Transport parameter values:
					0x00 = BR/EDR
					0x01 = LE

		This command is used to register L2CAP PSM and listen for
		incoming data.

		The MTU parameter is used to specify initial MTU for channels.

		Security_Type defines if security is required for establishing
		connection. Key_Size defines authentication key size required for
		security of connection.

		Response parameter can be used to specify a response value used in
		L2CAP Connection Response to send non-success responses like
		Insufficient Authentication.

		Valid Response values:
					0x00 = Success
					0x01 = Insufficient authentication
					0x02 = Insufficient authorization
					0x03 = Insufficient encryption key size
					0x04 = Insufficient encryption

		In case of an error, the error response will be returned.

	Opcode 0x06 - Accept Connection Request

		Controller Index:	<controller id>
		Command parameters:	Chan_ID (1 octet)
					Result (2 octets)
		Return Parameters:	<none>

		This command is used to accept/reject incoming connection
		request. Connection can be rejected with non-zero Result value
		(refer to the L2CAP <LE Credit Based> Connection Result values).
		Connected Event shall be expected after issuing this command.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Reconfigure Request

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					MTU (2 octets)
					Num (1 octet)
					Channels (1 octet x number of channels)
		Return Parameters:	<none>

		This command is used to reconfigure Enhanced L2CAP Channels.

		In case of an error, the error response will be returned.

	Opcode 0x08 - Credits

		Controller Index:	<controller id>
		Command parameters:	Chan_ID (1 octet)
		Return Parameters:	<none>

		This command is used to instruct IUT to return credits on
		specified channel.

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - Connection Request Event

		Controller Index:	<controller id>
		Event parameters:	Chan_ID (1 octet)
					PSM (2 octets)
					Address_Type (1 octet)
					Address (6 octets)

		This event indicates incoming request for L2CAP connection.
		Connection Request needs to be accepted/rejected with result
		code using Accept Connection Request command.

	Opcode 0x81 - Connected Event

		Controller Index:	<controller id>
		Event parameters:	Chan_ID (1 octet)
					PSM (2 octets)
					Peer MTU (2 octets)
					Peer MPS (2 octets)
					Our MTU (2 octets)
					Our MPS (2 octets)
					Address_Type (1 octet)
					Address (6 octets)

		This event indicates new L2CAP connection.
		Chan_ID is the internal application number that identifies
		L2CAP channel.

	Opcode 0x82 - Disconnected Event

		Controller Index:	<controller id>
		Event parameters:	Result (2 octets)
					Chan_ID (1 octet)
					PSM (2 octets)
					Address_Type (1 octet)
					Address (6 octets)

		This event indicates L2CAP disconnection.
		Result value is returned in the response, if remote rejected
		connection request only. Otherwise it shall be set to zero.
		Please refer to the Core Specification for possible
		L2CAP <LE Credit Based> Connection Result values.
		Chan_ID is the internal application number that identifies
		L2CAP channel.

	Opcode 0x83 - Data Received Event

		Controller Index:	<controller id>
		Event parameters:	Chan_ID (1 octet)
					Data_Length (2 octets)
					Data (Data_Length octets)

		This event forwards data received over L2CAP channel.
		Chan_ID is the internal application number that identifies
		L2CAP channel.

	Opcode 0x84 - Reconfigured Event

		Controller Index:	<controller id>
		Event parameters:	Chan_ID (1 octet)
					Peer MTU (2 octets)
					Peer MPS (2 octets)
					Our MTU (2 octets)
					Our MPS (2 octets)

		This event indicates new that an L2CAP Channel has been reconfigured.
		Chan_ID is the internal application number that identifies
		L2CAP channel.

Mesh Node Service (ID 4)
==================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Configure Provisioning command/response
		Controller Index:	<controller id>
		Command parameters:	UUID (16 octets)
					Static Auth (16 octets)
					Output Size (1 octet)
					Output Actions (2 octets)
					Input Size (1 octet)
					Input Actions (2 octets)

		This command is used to configure provisioning options.

		Output actions is a bitmask with following available bits:
			0	Blink
			1	Beep
			2	Vibrate
			3	Display number
			4	Display string

		Input actions is a bitmask with following available bits:
			0	Push
			1	Twist
			2	Enter number
			3	Enter string

		In case of an error, the error response will be returned.

	Opcode 0x03 - Provision Node command/response
		Controller Index:	<controller id>
		Command parameters:	Network Key (16 octets)
					Network Key Index (2 octets)
					Provisioning Flags (1 octet)
					IV Index (4 octets)
					Sequence Number (4 octets)
					Primary Element Address (2 octets)
					Device Key (16 octets)

		This command is used to provide provisioning information. It can
		be used whenever unprovisioned beacon is advertising or not.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Init command/response
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to start advertising either as
		unprovisioned beacon or network node. Action depends on previous
		configuration.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Reset command/response
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to reset state of a provisioned node making
		it to start sending unprovisioned beacons.

		In case of an error, the error response will be returned.

	Opcode 0x06 - Input number command/response
		Controller Index:	<controller id>
		Command parameters:	Number (4 octets)

		This command is used to reply with input number as a response to
		Input action event.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Input string command/response
		Controller Index:	<controller id>
		Command parameters:	String Length (1 octet)
					String (variable)

		This command is used to reply with input string as a response to
		Input action event.

		In case of an error, the error response will be returned.

	Opcode 0x08 - IV Update Test Mode
		Controller Index:	<controller id>
		Command parameters:	Toggle (1 octet)

		Valid Toggle values:
					0x00 = Disable
					0x01 = Enable

		This command is used to toggle the IV Update test mode.

		In case of an error, the error response will be returned.

	Opcode 0x09 - IV Update toggle state
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to make a IV Update state transition
		while in IV Update test mode, ignoring the 96 hour limit.

		In case of an error, the error response will be returned.

	Opcode 0x0a - Network Send
		Controller Index:	<controller id>
		Command parameters:	TTL (1 octet)
					SRC (2 octets)
					DST (2 octets)
					Payload_Len (1 octet)
					Payload (variable)

		This command is used to send network layer packet.

		In case of an error, the error response will be returned.

	Opcode 0x0b - Health Generate Faults
		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	Test_ID (1 octet)
					Current_Faults_Count (1 octet)
					Registered_Faults_Count (1 octet)
					Current_Faults (variable)
					Registered_Faults (variable)

		This command is used to generate health faults on IUT.

		In case of an error, the error response will be returned.

	Opcode 0x0c - Health Clear Faults
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to clear fault arrays on IUT.

		In case of an error, the error response will be returned.

	Opcode 0x0d - Low Power Node
		Controller Index:	<controller id>
		Command parameters:	Toggle (1 octet)

		Valid Toggle values:
					0x00 = Disable
					0x01 = Enable

		This command is used to toggle the Low Power feature of the
		local device.

		In case of an error, the error response will be returned.

	Opcode 0x0e - Low Power Node Poll
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to send out a Friend Poll message.

		In case of an error, the error response will be returned.

	Opcode 0x0f - Model Send
		Controller Index:	<controller id>
		Command parameters:	SRC (2 octets)
					DST (2 octets)
					Payload_Len (1 octet)
					Payload (variable)

		This command is used to send Mesh model message.

		In case of an error, the error response will be returned.

	Opcode 0x10 - Low Power Node Subscribe
		Controller Index:	<controller id>
		Command parameters:	Address (2 octets)

		This command is used to send out a Friend Subscription List
		Add message message.

		In case of an error, the error response will be returned.

	Opcode 0x11 - Low Power Node Unsubscribe
		Controller Index:	<controller id>
		Command parameters:	Address (2 octets)

		This command is used to send out a Friend Subscription List
		Remove message.

		In case of an error, the error response will be returned.

	Opcode 0x12 - Clear Replay Protection List Cache
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to clear Replay Protection List Cache.

		In case of an error, the error response will be returned.

	Opcode 0x13 - Enable advertising with Node Identity
		Controller Index:	<controller id>
		Command parameters:	<none>

		This command is used to start advertising on each subnet using
		Node Identity for the next 60 seconds.

		In case of an error, the error response will be returned.

	Opcode 0x14 - Config Composition Data Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Page (1 octet)

		This command is used to get the Config Composition Data.

		In case of an error, the error response will be returned.

	Opcode 0x15  Config Beacon Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response Parameters:    Beacon Status (1 octet)

		This command is used to send the Config Beacon Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x16 - Config Beacon Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Value (1 octet)
		Response Parameters: 	Beacon Status (1 octet)

		This command is used to send the Config Beacon Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x18 - Config Default TTL Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response Parameters:    TTL Status (1 octet)

		This command is used to send the Config Default TTL Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x19 - Config Default TTL Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Value (1 octet)
		Response parameters: 	TTL Status (1 octet)

		This command is used to send the Config Default TTL Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x1a - Config GATT Proxy Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	GATT Proxy Status (1 octet)

		This command is used to send the Config GATT Proxy Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x1b - Config GATT Proxy Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Value (1 octet)
		Response parameters: 	GATT Proxy Status (1 octet)

		This command is used to send the Config GATT Proxy Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x1c - Config Friend Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Friend Status (1 octet)

		This command is used to send the Config Friend Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x1d - Config Friend Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Value (1 octet)
		Response parameters: 	GATT Proxy Status (1 octet)

		This command is used to send the Config Friend Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x1e - Config Relay Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Relay Status (1 octet)

		This command is used to send the Config Relay Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x1f - Config Relay Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Value (1 octet)
		Response parameters: 	Relay Status (1 octet)

		This command is used to send the Config Relay Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x20 - Config Model Publication Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Publication Status (1 octet)

		This command is used to send the Config Model Publication Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x21 - Config Model Publication Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        Publication destination address (2 octets)
		                        Application index (2 octets)
		                        Friendship credential flag (1 octet)
		                        TTL (1 octet)
		                        Period (1 octet)
		                        Transmit (1 octet)
		Response parameters: 	Model Publication Status (1 octet)

		This command is used to send the Config Model Publication Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x22 - Config Model Subscription Add

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Subscription address (2 octets)
                                Model ID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Add messages.

		In case of an error, the error response will be returned.

	Opcode 0x23 - Config Model Subscription Del

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Subscription address (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Del messages.

		In case of an error, the error response will be returned.

	Opcode 0x24 - Config Model Network Key Add

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key (16 octets)
		                        Network key index (2 octets)
		Response parameters: 	Model Netkey Status (1 octet)

		This command is used to send the Config Model Network Key Add messages.

		In case of an error, the error response will be returned.

	Opcode 0x25 - Config Model Network Key Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Model Netkey Status (1 octet)

		This command is used to send the Config Model Network Key Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x26 - Config Model Network Key Del

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		Response parameters: 	Model Netkey Status (1 octet)

		This command is used to send the Config Model Network Key Del messages.

		In case of an error, the error response will be returned.

	Opcode 0x27 - Config Model Application Key Add

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Application key (16 octets)
		                        Application key index (2 octets)
		Response parameters: 	Model Appkey Status (1 octet)

		This command is used to send the Config Model Application Key Add messages.

		In case of an error, the error response will be returned.

	Opcode 0x28 - Config Model Application Key Delete

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Application key index (2 octets)
		Response parameters: 	Model Appkey Status (1 octet)

		This command is used to send the Config Model Application Key Delete messages.

		In case of an error, the error response will be returned.

	Opcode 0x29 - Config Model Application Key Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Application key index (2 octets)
		Response parameters: 	Model Appkey Status (1 octet)

		This command is used to send the Config Model Application Key Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x2A - Config Model Application Bind

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Application key index (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Application Bind Status (1 octet)

		This command is used to send the Config Model Application Bind messages.

		In case of an error, the error response will be returned.

    Opcode 0x2B - Config Model Application Unbind

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Application key index (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Application Unbind Status (1 octet)

		This command is used to send the Config Model Application Unbind messages.

		In case of an error, the error response will be returned.

    Opcode 0x2C - Config Model Application Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Application key index (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Application Status (1 octet)

		This command is used to send the Config Model Application Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x2D - Config Model Application Vendor Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Application key index (2 octets)
		                        Model ID (2 octets)
		                        CID (2 octets)
		Response parameters: 	Model Application Status (1 octet)

		This command is used to send the Config Model Application Vendor Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x2E - Config Model Heartbeat Publication Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Destination address (2 octets)
		                        Count (1 octet)
		                        Period (1 octet)
		                        TTL (1 octet)
		                        Features (2 octets)
		Response parameters: 	Model Heartbeat Publication Status (1 octet)

		This command is used to send the Config Model Heartbeat Publication Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x2F - Config Model Heartbeat Publication Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Model Heartbeat Publication Status (1 octet)

		This command is used to send the Config Model Heartbeat Publication Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x30 - Config Model Heartbeat Subscription Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Source (2 octets)
		                        Destination address (2 octets)
		                        Period (1 octet)
		Response parameters: 	Model Heartbeat Subscription Status (1 octet)

		This command is used to send the Config Model Heartbeat Subscription Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x31 - Config Model Heartbeat Subscription Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Model Heartbeat Subscription Status (1 octet)

		This command is used to send the Config Model Heartbeat Subscription Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x32 - Config Model Network Transmit Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Model Network Transmit Status (1 octet)

		This command is used to send the Config Model Network Transmit Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x33 - Config Model Network Transmit Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Transmit (1 octet)
		Response parameters: 	ModelNetwork Transmit Status (1 octet)

		This command is used to send the Config Model Network Transmit Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x34 - Config Model Subscription Overwrite

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Subscription address (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Overwrite messages.

		In case of an error, the error response will be returned.

	Opcode 0x35 - Config Model Subscription Delete All

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send th Config Model Subscription Delete All messages.

		In case of an error, the error response will be returned.

	Opcode 0x36 - Config Model Subscription Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x37 - Config Model Subscription Vendor Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        CID (2 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Vendor Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x38 - Config Model Subscription Virtual Address Add

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        Virtual address (16 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Virtual Address Add messages.

		In case of an error, the error response will be returned.

	Opcode 0x39 - Config Model Subscription Virtual Address Delete

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        Virtual address (16 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Virtual Address Delete messages.

		In case of an error, the error response will be returned.

	Opcode 0x3A - Config Model Subscription Virtual Address Overwrite

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        Virtual address (16 octets)
		Response parameters: 	Model Subscription Status (1 octet)

		This command is used to send the Config Model Subscription Virtual Address Overwrite messages.

		In case of an error, the error response will be returned.

	Opcode 0x3B - Config Model Network Key Update

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key (16 octets)
		                        Network key index (2 octets)
		Response parameters: 	Model Netkey Status (1 octet)

		This command is used to send the Config Model Network Key Update messages.

		In case of an error, the error response will be returned.

	Opcode 0x3C - Config Model Application Key Update

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Appkey key (16 octets)
		                        Application key index (2 octets)
		Response parameters: 	Model Appkey Status (1 octet)

		This command is used to send the Config Model Application Key Update messages.

		In case of an error, the error response will be returned.

	Opcode 0x3D - Config Model Node Identity Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Identity (1 octet)
		Response parameters: 	Model Node Identity Status (1 octet)

		This command is used to send the Config Model Node Identity Set messages.

		In case of an error, the error response will be returned.

	Opcode 0x3E - Config Model Node Identity Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		Response parameters: 	Model Node Identity Status (1 octet)

		This command is used to send the Config Model Node Identity Get messages.

		In case of an error, the error response will be returned.

	Opcode 0x3F - Config Model Node Identity Reset

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		Response parameters: 	Model Node Identity Status (1 octet)

		This command is used to send the Config Model Node Identity Reset messages.

		In case of an error, the error response will be returned.

	Opcode 0x40 - Config Model LPN Polltimeout Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Unicast Address (2 octets)
		Response parameters: 	Model Node Identity Status (1 octet)

		This command is used to send the Config Model LPN Polltimeout Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x41 - Config Model Publication Virtual Address Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Model ID (2 octets)
		                        Virtual address (16 octets)
		                        Application key index (2 octets)
		                        Credential flag (1 octet)
		                        TTL (1 octet)
		                        Period (1 octet)
		                        Transmit (1 octet)
		Response parameters: 	Model Publication Status (1 octet)

		This command is used to send the Config Model Publication Virtual Address Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x42 - Config Model Application Vendor Bind

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Element address (2 octets)
		                        Application key index (2 octets)
		                        Model ID (2 octets)
		                        CID (2 octets)
		Response parameters: 	Model Application Bind Status (1 octet)

		This command is used to send the Config Model Application Vendor Bind messages.

		In case of an error, the error response will be returned.

    Opcode 0x43 - Health Fault Get

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		                        CID (2 octets)

		This command is used to send the Health Fault Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x44 - Health Fault Clear

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		                        CID (2 octets)
		                        Acknowledgement (1 octet)
		Response parameters: 	Health Fault Clear Status (1 octet)

		This command is used to send the Health Fault Clear messages.

		In case of an error, the error response will be returned.

    Opcode 0x45 - Health Fault Test

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		                        CID (2 octets)
		                        Test ID (1 octet)
		                        Acknowledgement (1 octet)
		Response parameters: 	Health Fault Test Status (1 octet)

		This command is used to send the Health Fault Test messages.

		In case of an error, the error response will be returned.

    Opcode 0x46 - Health Period Get

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		Response parameters: 	Health Period Get Status (1 octet)

		This command is used to send the Health Period Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x47 - Health Period Set

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		                        Divisor (1 octet)
		                        Acknowledgement (1 octet)
		Response parameters: 	Health Period Set Status (1 octet)

		This command is used to send the Health Period Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x48 - Health Attention Get

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		Response parameters: 	Health Attention Get Status (1 octet)

		This command is used to send the Health Attention Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x49 - Health Attention Set

		Controller Index:       <controller id>
		Command parameters:     Node address (2 octets)
		                        Application index (2 octets)
		                        Attention (1 octet)
		                        Acknowledgement (1 octet)
		Response parameters: 	Health Attention Set Status (1 octet)

		This command is used to send the Health Attention Set messages.

		In case of an error, the error response will be returned.

    Opcode 0x4A - Provision Advertising

		Controller Index:       <controller id>
		Command parameters:     UUID (16 octets)
		                        Network key index (2 octets)
		                        Node address (2 octets)
		                        Attention duration(1 octet)
		                        Network key (16 octets)

		This command is used to start the provision advertising.

		In case of an error, the error response will be returned.

    Opcode 0x48 - Config Key Refesh Phase Get

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		Response parameters: 	Key Refesh Get Status (1 octet)
		                        Phase (1 octets)

		This command is used to send the Key Refesh Phase Get messages.

		In case of an error, the error response will be returned.

    Opcode 0x49 - Key Refesh Phase Set

		Controller Index:       <controller id>
		Command parameters:     Network index (2 octets)
		                        Node address (2 octets)
		                        Network key index (2 octets)
		                        Phase (1 octet)
		Response parameters: 	Key Refesh Phase Set Status (1 octet)
		                        Phase (1 octets)

		This command is used to send the Key Refesh Phase Set messages.

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - Output number action Event

		Controller Index:	<controller id>
		Event parameters:	Action (2 octets)
					Number (4 octets)

	Opcode 0x81 - Output string action Event

		Controller Index:	<controller id>
		Event parameters:	String Length (1 octet)
					String (variable)

	Opcode 0x82 - Input action Event

		Controller Index:	<controller id>
		Event parameters:	Action (2 octets)
					Size (1 octet)

		This event indicates that input action is required. Depending
		on action it may require reply with 'Input number' or
		'Input string' commands.

		Depending on action either number or string fields are valid.

	Opcode 0x83 - Provisioned Event

		Controller Index:	<controller id>
		Event parameters:	<none>

		This event indicate that node was provisioned.

	Opcode 0x84 - Link open Event

		Controller Index:	<controller id>
		Event parameters:	Bearer (1 octet)

		Valid Bearer parameter values:

					0x00 = PB-ADV
					0x01 = PB-GATT

		This event indicates that provisioning link has been opened on
		given bearer.

	Opcode 0x85 - Link closed Event

		Controller Index:	<controller id>
		Event parameters:	Bearer (1 octet)

		Valid Bearer parameter values:

					0x00 = PB-ADV
					0x01 = PB-GATT

		This event indicates that provisioning link has been closed on
		given bearer.

	Opcode 0x86 - Network receive Event

		Controller Index:	<controller id>
		Event parameters:	TTL (1 octet)
					CTL (1 octet)
					SRC (2 octets)
					DST (2 octets)
					Payload_Len (1 octet)
					Payload (variable)

		This event indicates reception of network packet.

	Opcode 0x87 - Invalid BearerOpcode Event

		Controller Index:	<controller id>
		Event parameters:	Opcode (1 octet)

		This event indicates reception of provisioning message with
		invalid RFU BearerOpcode.

	Opcode 0x88 - Transport Incomplete Timer Expired Event

		Controller Index:	<controller id>
		Event parameters:	<none>

		This event indicates that segmented message incomplete timer
		expired.

	Opcode 0x89 - Friendship Established Event

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octet)
					LPN address (2 octet)
					Receive delay (1 octets)
					Poll timeout (4 octets)

		This event indicates that a Friendship has been established
		(as a Friend).

	Opcode 0x8a - Friendship Terminated Event

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octet)
					LPN address (2 octet)

		This event indicates that a Friendship has been terminated
		(as a Friend).

	Opcode 0x8b - LPN Established Event

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octet)
					Friend address (2 octet)
					Queue size (1 octets)
					Receive window (1 octets)

		This event indicates that a Friendship has been established
		(as a LPN).

	Opcode 0x8c - LPN Terminated Event

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octet)
					Friend address (2 octet)

		This event indicates that a Friendship has been terminated
		(as a LPN).

	Opcode 0x8d - LPN Polled Event

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octet)
					Friend address (2 octet)
					Retry (1 octet)

		Retry parameter is a binary value indicaing that a poll was a retry.

		This event indicates that the IUT as an LPN has polled a Friend.

	Opcode 0x8e - Provisioned Node Added

		Controller Index:	<controller id>
		Event parameters:	Network Key Index (2 octets)
					Address (2 octets)
					UUID (16 octets)
					Number of elements (1 octet)

		This event indicates that the IUT has provisioned a new node.

Mesh Model Service (ID 5)
==================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:		<controller id>
		Command parameters:		<none>
		Response parameters:		<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Generic OnOff State Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response parameters:		Present OnOff (1 octet)
			 			Target OnOff (1 octet)
						Remaining Time (4 octets)

		Valid OnOff values:
					0x00 = Off
					0x01 = On

		This command is used to get the OnOff state.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Generic OnOff State Set/Status

		Controller Index:		<controller id>
		Command parameters:		Acknowledgement (1 octet)
						OnOff (1 octet)
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters:	Present OnOff (1 octet)
			 			Target OnOff (1 octet)
						Remaining Time (4 octets)

		Valid OnOff values:
				0x00 = Off
				0x01 = On

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the OnOff state.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Generic Level State Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters:	Present Level (2 octets)
			 			Target Level (2 octets)
						Remaining Time (4 octets)

		This command is used to get the Level state.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Generic Level State Set/Status

		Controller Index:		<controller id>
		Command parameters:		Acknowledgement (1 octet)
						Level (2 octets)
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters:	Present Level (2 octets)
			 			Target Level (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Level state.

		In case of an error, the error response will be returned.

	Opcode 0x06 - Generic Level Delta Set/Status

		Controller Index:		<controller id>
		Command parameters:		Acknowledgement (1 octet)
						Delta (2 octets)
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters:	Present Level (2 octets)
			 			Target Level (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to change the Level state.
		Makes the server move its level state by some delta value.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Generic Level Move Set/Status

		Controller Index:		<controller id>
		Command parameters:		Acknowledgement (1 octet)
						Move (2 octets)
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters:	Present Level (2 octets)
			 			Target Level (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Move Level state.
		It makes the server continuously move its level state.

		In case of an error, the error response will be returned.

	Opcode 0x08 - Generic Default Transition Time Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Transition Time (4 octets)

		This command is used to get the Default Transition Time.

		In case of an error, the error response will be returned.

	Opcode 0x09 - Generic Default Transition Time Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Transition Time (1 octet)
		Response Status parameters: 	Transition Time (4 octets)

		This command is used to set the Default Transition Time.

		In case of an error, the error response will be returned.

	Opcode 0x0a - Generic On Power Up Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	On Power Up (1 octet)

		This command is used to get the OnPowerUp state.

		In case of an error, the error response will be returned.

	Opcode 0x0b - Generic On Power Up Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						On Power Up (1 octet)
		Response Status parameters: 	On Power Up (1 octet)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the OnPowerUp state.

		In case of an error, the error response will be returned.

	Opcode 0x0c - Generic Power Level Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Power Level  (2 octets)

		This command is used to get the Power Level.

		In case of an error, the error response will be returned.

	Opcode 0x0d - Generic Power Level Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
		                    		Power Level (2 octets)
		                    		Transition Time (1 octet)
		                    		Delay (1 octet)
		Response Status parameters: 	Power Level (1 octet)

		This command is used to set the Power Level.

		In case of an error, the error response will be returned.

	Opcode 0x0e - Generic Power Level Last Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Power Level Last (2 octets)

		This command is used to get last non-zero Power Level.

		In case of an error, the error response will be returned.

	Opcode 0x0f - Generic Power Level Default Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Power Default (2 octets)

		This command is used to get the Default Power Level.

		In case of an error, the error response will be returned.

	Opcode 0x10 - Generic Power Level Default Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Power Default (2 octets)
		Response Status parameters: 	Power Default (2 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Default Power Level.

		In case of an error, the error response will be returned.

	Opcode 0x11 - Generic Power Lever Range Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Status  (1 octet)
			 			Min (2 octets)
						Max (2 octets)

		This command is used to get the Power Range state.

		In case of an error, the error response will be returned.

	Opcode 0x12 - Generic Power Level Range Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Min (2 octets)
						Max (2 octets)
		Response Status parameters: 	Status  (1 octet)
			 			Min (2 octets)
						Max (2 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Power Range state.

		In case of an error, the error response will be returned.

	Opcode 0x13 - Generic Battery Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Battery Level (1 octet)
			 			Time to Discharge (3 octets)
						Time to Charge (3 octets)

		This command is used to get the Battery state.

		In case of an error, the error response will be returned.

	Opcode 0x14 - Generic Location Global Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Global Latitude (4 octets)
			 			Global Longitude (4 octets)
						Global Altitude (2 octets)

		This command is used to get the Global Location state.

		In case of an error, the error response will be returned.

	Opcode 0x15 - Generic Location Local Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Local North (2 octets)
						Local East (2 octets)
						Local Altitude (2 octets)
						Floor Number (1 octet)
						Uncertainty (2 octets)

		This command is used to get the Local Location state.

		In case of an error, the error response will be returned.

	Opcode 0x16 - Generic Location Global Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Global Latitude (4 octets)
						Global Longitude (4 octets)
						Global Altitude (2 octets)
		Response Status parameters: 	Global Latitude (4 octets)
			 			Global Longitude (4 octets)
						Global Altitude (2 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Global Location state.

		In case of an error, the error response will be returned.

	Opcode 0x17 - Generic Location Local Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Local North (2 octets)
						Local East (2 octets)
						Local Altitude (2 octets)
						Floor Number (1 octet)
						Uncertainty (2 octets)
		Response Status parameters: 	Local North (2 octets)
			 			Local East (2 octets)
						Local Altitude (2 octets)
						Floor Number (1 octet)
						Uncertainty (2 octets)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Local Location state.

		In case of an error, the error response will be returned.

	Opcode 0x18 - Generic User Properties Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Kind of Property Server (1 octet)
						Property ID (2 octets)
		Response Status parameters: 	[array] Property IDs (variable)

		This command is used to get the list of Properties.

		In case of an error, the error response will be returned.

	Opcode 0x19 - Generic User Property Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Kind of Property Server (1 octet)
		                    		Property ID (2 octets)
		Response Status parameters: 	Property ID (2 octets)
			 			Acces (1 octet)
						Property Value Size (1 octet)
						Property Value (variable)

		This command is used to get the value of a Property.

		In case of an error, the error response will be returned.

	Opcode 0x1a - Generic User Property Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Kind of Property Server (1 octet)
						Property ID (2 octets)
						Access (1 octet)
						Property Value (variable)
		Response Status parameters: 	Property ID (2 octets)
			 			Access (1 octet)
						Property Value Size (1 octet)
						Property Value (variable)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the user access of a property.

		In case of an error, the error response will be returned.

	Opcode 0x1b - Sensor Descriptor Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
		Response Status parameters: 	[array] Descriptor (variable)

		This command is used to get the descriptor for the given sensor.

		In case of an error, the error response will be returned.

	Opcode 0x1c - Sensor Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
		Response Status parameters: 	[array] Marshalled Sensor Data (variable)

		This command is used to get the sensor data from a sensor instance.

		In case of an error, the error response will be returned.

	Opcode 0x1d - Sensor Column Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
						Raw Value (variable)
		Response Status parameters: 	Property ID (2 octets)
			 			Column Data (variable)

		This command is used to get a single sensor series data entry.

		In case of an error, the error response will be returned.

	Opcode 0x1e - Sensor Series Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
						Raw Values (variable)
		Response Status parameters: 	Property ID (2 octets)
			 			Column Data (variable)

		This command is used to get a single sensor series data entry.

		In case of an error, the error response will be returned.

	Opcode 0x1f - Sensor Cadence Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
		Response Status parameters: 	Sensor ID (2 octets)
			 			Cadence Data (variable)

		This command is used to get the Cadence state for given sensor.

		In case of an error, the error response will be returned.

	Opcode 0x20 - Sensor Cadence Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Sensor ID (2 octets)
						Cadence Data (variable)
		Response Status parameters: 	Cadence Data (variable)

		Acknowledgment values:
					True = with requesting a status response
					False = without requesting a status response

		This command is used to set the Cadence state for given sensor.

		In case of an error, the error response will be returned.

	Opcode 0x21 - Sensor Settings Get/Status

		Controller Index		<controller id>
		Command parameters:		Sensor ID (2 octets)
		Response Status parameters:	Sensor ID (2 octets)
			 			Property ID (2 octets)

		This command is used to get the list of settings for given sensor.

		In case of an error, the error response will be returned.

	Opcode 0x22 - Sensor Setting Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
						Setting ID (2 octets)
		Response Status parameters:

	Opcode 0x23 - Sensor Setting Set

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Sensor ID (2 octets)
						Setting ID (2 octets)
						Sensor Setting Raw (variable)
		Response Status parameters:

	Opcode 0x24 - Time Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	TAI Seconds (5 octets)
			 			Subsecond (1 octet)
						Uncertainy (1 octet)
						TAI-UTC Delta (2 octets)
						Time Zone Offset (1 octet)

		This command is used to get current Time Status.

		In case of an error, the error response will be returned.

	Opcode 0x25 - Time Set/Status

		Controller Index:		<controller id>
		Command parameters: 		TAI Seconds (6 octets)
						Subsecond (1 octet)
						Uncertainy (1 octet)
						TAI-UTC Delta (2 octets)
						Time Zone Offset (1 octet)
		Response Status parameters: 	TAI Seconds (5 octets)
			 			Subsecond (1 octet)
						Uncertainy (1 octet)
						TAI-UTC Delta (2 octets)
						Time Zone Offset (1 octet)

		This command is used to get the Time Role state.

		In case of an error, the error response will be returned.

	Opcode 0x26 - Time Role Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Time Role (1 octet)

		This command is used to get the Time Role state.

		In case of an error, the error response will be returned.

	Opcode 0x27 - Time Role Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Time Role (1 octet)
		Response Status parameters: 	Time Role (1 octet)

		This command is used to set the Time Role state.

		In case of an error, the error response will be returned.

	Opcode 0x28 - Time Zone Get

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Time Zone Offset Current (2 octets)
			 			Time Zone Offset New (2 octets)
						TAI of Zone Change (8 octets)

		This command is used to get the Time Zone status.

		In case of an error, the error response will be returned.

	Opcode 0x29 - Time Zone Set

		Controller Index:		<controller id>
		Command parameters: 		Time Zone Offset New (2 octets)
						TAI of Zone Change (8 octets)
		Response Status parameters: 	Time Zone Offset New (2 octets)
			 			TAI of Zone Change (8 octets)

		This command is used to set the Time Zone status.

		In case of an error, the error response will be returned.

	Opcode 0x2a - Time TAI-UTC Delta Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	TAI-UTC Delta Current (2 octets)
			 			TAI-UTC Delta New (2 octets)
						TAI of Delta Change (8 octets)

		This command is used to get the UTC Delta change.

		In case of an error, the error response will be returned.

	Opcode 0x2b - Time TAI-UTC Delta Set/Status

		Controller Index:		<controller id>
		Command parameters: 		TAI-UTC Delta New (2 octets)
						TAI of Delta Change (8 octets)
		Response Status parameters: 	TAI-UTC Delta New (2 octets)
			 			TAI of Delta Change (8 octets)

		This command is used to set the UTC Delta change.

		In case of an error, the error response will be returned.

	Opcode 0x2c - Light Lightness Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Present Lightness (2 octets)
			 			Target Lightness (2 octets)
						Remaining Time (4 octets)

		This command is used to get the Light Level.

		In case of an error, the error response will be returned.

	Opcode 0x2d - Light Lightness Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Lightness (2 octets)
						Transition Time (1 octet)
						Delay (1octet)
		Response Status parameters: 	Present Lightness (2 octets)
						Target Lightness (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Level.

		In case of an error, the error response will be returned.

	Opcode 0x2e - Light Lightness Linear Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Present Lightness (2 octets)
			 			Target Lightness (2 octets)

		This command is used to get the Linear Light Level.

		In case of an error, the error response will be returned.

	Opcode 0x2f - Light Lightness Linear Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Lightness Linear(2 octets)
						Transition Time (1 octet)
						Delay (1octet)
		Response Status parameters: 	Present Lightness (2 octets)
			 			Target Lightness (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Linear Light Level.

		In case of an error, the error response will be returned.

	Opcode 0x30 - Light Lightness Last Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Lightness (2 octets)

		This command is used to get the last non-zero Light Level.

		In case of an error, the error response will be returned.

	Opcode 0x31 - Light Lightness Default Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Lightness (2 octets)

		This command is used to get the Default Light state.

		In case of an error, the error response will be returned.

	Opcode 0x32 - Light Lightness Default Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Lightness (2 octets)
		Response Status parameters: 	Lightness (2 octets)

		This command is used to set the Default Light state.

		In case of an error, the error response will be returned.

	Opcode 0x33 - Light Lightness Range Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Status Code (2 octets)
			 			Range Min (2 octets)
						Range Max (2 octets)

		This command is used to get the Light Range state.

		In case of an error, the error response will be returned.

	Opcode 0x34 - Light Lightness Range Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Range Min (2 octets)
						Range Max (2 octets)
		Response Status parameters: 	Status Code (2 octets)
			 			Range Min (2 octets)
						Range Max (2 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Range state.

		In case of an error, the error response will be returned.

	Opcode 0x35 - Light LC Mode Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Mode (1 octet)

		This command is used to get the Light Lightness Control Server’s current Mode.

		In case of an error, the error response will be returned.

	Opcode 0x36 - Light LC Mode Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Mode (1 octet)
		Response Status parameters: 	Mode (1 octet)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Lightness Control Server’s current Mode.

		In case of an error, the error response will be returned.

	Opcode 0x37 - Light LC Occupancy Mode Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Occupancy Mode (1 octet)

		This command is used to get the Light Lightness Control Server’s Occupancy Mode.

		In case of an error, the error response will be returned.

	Opcode 0x38 - Light LC Occupancy Mode Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Occupancy Mode (1 octet)
		Response Status parameters: 	Mode (1 octet)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Lightness Control Server’s Occupancy Mode.

		In case of an error, the error response will be returned.

	Opcode 0x39 - Light LC Light OnOff Mode Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Light OnOff (1 octet)

		This command is used to get the Light Lightness Control Server’s current OnOff state.

		In case of an error, the error response will be returned.

	Opcode 0x3a - Light LC Light OnOff Mode Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Light OnOff (1 octet)
						Transition Time (1 octet)
						Delay (1octet)
		Response Status parameters: 	Present Light OnOff (1 octet)
			 			Target Light OnOff (1 octet)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Lightness Control Server’s current OnOff state.

		In case of an error, the error response will be returned.

	Opcode 0x3b - Light LC Property Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Light OnOff (1 octet)

		This command is used to get the Light Lightness Control Server property value.

		In case of an error, the error response will be returned.

	Opcode 0x3c - Light LC Property Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Light OnOff (1 octet)
						Transition Time (1 octet)
						Delay (1octet)
		Response Status parameters: 	Present Light OnOff (1 octet)
						Target Light OnOff (1 octet)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light Lightness Control Server property value.

		In case of an error, the error response will be returned.

	Opcode 0x3d - Sensor Data Set

		Controller Index:		<controller id>
		Command parameters: 		Sensor ID (2 octets)
						Raw Values (variable)

		This command is used to set Sensor Data.

		In case of an error, the error response will be returned.

	Opcode 0x3e - Light CTL States Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Present CTL Lightness (2 octets)
			 			Present CTL Temperature (2 octets)
						Target CTL Lightness (2 octets)
						Target CTL Temperature (2 octets)
						Remaining Time (4 octets)

		This command is used to get the CTL state.

		In case of an error, the error response will be returned.

	Opcode 0x3f - Light CTL States Set/status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						CTL Lightness (2 octets)
						CTL Temperature (2 octets)
						CTL Delta UV
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters: 	Present CTL Lightness (2 octets)
			 			Present CTL Temperature (2 octets)
						Target CTL Lightness (2 octets)
						Target CTL Temperature (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the CTL state.

		In case of an error, the error response will be returned.

	Opcode 0x40 - Light CTL Temperature Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Present CTL Temperature (2 octets)
			 			Present CTL Delta UV (2 octets)
						Target CTL Temperature (2 octets)
						Target CTL Delta UV (2 octets)
						Remaining Time (4 octets)

		This command is used to get the Light CTL Temperature state.

		In case of an error, the error response will be returned.

	Opcode 0x41 - Light CTL Temperature Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						CTL Temperature (2 octets)
						CTL Delta UV (2 octets)
						Transition Time (1 octet)
						Delay (1 octet)
		Response Status parameters: 	Present CTL Temperature (2 octets)
			 			Present CTL Delta UV (2 octets)
						Target CTL Temperature (2 octets)
						Target CTL Delta UV (2 octets)
						Remaining Time (4 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light CTL Temperature state.

		In case of an error, the error response will be returned.

	Opcode 0x42 - Light CTL Default Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	CTL Lightness (2 octet)
			 			CTL Temperature (2 octet)
						CTL Delta UV (2 octets)

		This command is used to get the Default Light CTL state.

		In case of an error, the error response will be returned.

	Opcode 0x43 - Light CTL Default Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						CTL Lightness (2 octets)
						CTL Temperature (2 octets)
						CTL Delta UV (2 octets)
		Response Status parameters: 	CTL Lightness (2 octets)
			 			CTL Temperature (2 octets)
						CTL Delta UV (2 octets_

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Default Light CTL state.

		In case of an error, the error response will be returned.

	Opcode 0x44 - Light CTL Temperature Range Get/Ststus

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters:	Status Code (1 octet)
			 			Range Min (2 octets)
						Range Max(2 octets)

		This command is used to get the Light CTL Temperature Range.

		In case of an error, the error response will be returned.

	Opcode 0x45 - Light CTL Temperature Range Set/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Range Min (2 octets)
						Range Max(2 octets)
		Response Status parameters: 	Status Code (1 octet)
			 			Range Min (2 octets)
						Range Max(2 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to set the Light CTL Temperature Range.

		In case of an error, the error response will be returned.

	Opcode 0x46 - Scene State Get/Status

		Controller Index:		<controller id>
		Command parameters: 		<none>
		Response Status parameters: 	Status Code (1 octet)
			 			Current Scene (2 octets)
						Target Scene (2 octets)

		This command is used to get the the current state of a Scene.

		In case of an error, the error response will be returned.

	Opcode 0x47 - Scene Register Get/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Scene Number (2 octets)
		Response Status parameters: 	Status Code (1 octet)
			 			Current Scene (2 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to get the the full scene register of a Scene.

		In case of an error, the error response will be returned.

	Opcode 0x48 - Scene Store Procedure

		Controller Index:		<controller id>
		Command parameters:		<none>
		Response Status parameters: 	Status Code (1 octet)
			 			Range Min (2 octets)
						Range Max(2 octets)

		This command is used to store the current state.

		In case of an error, the error response will be returned.

	Opcode 0x49 - Scene Recall/Status

		Controller Index:		<controller id>
		Command parameters: 		Acknowledgement (1 octet)
						Range Min (2 octets)
						Range Max(2 octets)
		Response Status parameters: 	Status Code (1 octet)
			 			Range Min (2 octets)
						Range Max(2 octets)

		Acknowledgment values:
				True = with requesting a status response
				False = without requesting a status response

		This command is used to recall the scene.

		In case of an error, the error response will be returned.

GATT Client Service (ID 6)
===================

Commands and responses:

	Opcode 0x00 - Error response

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Exchange MTU

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Response parameters:	<none>

		This command is used by GATT Client to configure ATT protocol.
		IUT is expected to send Exchange MTU Request to negotiate
		MTU size.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Discover All Primary Services

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover all primary
		services on a server.
		Services found during discovery are returned in the
		Discover All Primary Services Response event.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Discover Primary Service by UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover primary services
		with specific UUID on a server.
		Services found during discovery are returned in the Discover
		Primary Service by UUID Response event.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Find Included Services

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Service_Start_Handle (2 octets)
					Service_End_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover service
		relationships to other services.
		Services found during discovery are returned in the rFind
		Included Services Response event.

	Opcode 0x06 - Discover All Characteristics of a Service

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Service_Start_Handle (2 octets)
					Service_End_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover all
		characteristics within specified service range.
		Characteristics found during discovery are returned in the
		Discover All Characteristics of a Service Response event.

		In case of an error, the error response will be returned.

	Opcode 0x07 - Discover Characteristics by UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover characteristic
		declarations with given UUID on a server.
		Characteristics found during discovery are returned in the
		Discover Characteristics by UUID Response event.

		In case of an error, the error response will be returned.

	Opcode 0x08 - Discover All Characteristic Descriptors

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used by a client to discover all the
		characteristic descriptors contained within characteristic.
		Descriptors found during discovery are returned in the
		Discover All Characteristic Descriptors Response event.

		In case of an error, the error response will be returned.

	Opcode 0x09 - Read Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
		Response parameters:	<none>

		This procedure is used to read a Characteristic Value or
		Characteristic Descriptor from a server.
		Read results are returned in the Read Characteristic
		Value/Descriptor Response event.

		In case of an error, the error response will be returned.

	Opcode 0x0a - Read Using Characteristic UUID

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Start_Handle (2 octets)
					End_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)
		Response parameters:	<none>

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used to read a Characteristic Value from a
		server when characteristic UUID is known.
		Read results are returned in the Read Using Characteristic UUID
		Resonse event.

		In case of an error, the error response will be returned.

	Opcode 0x0b - Read Long Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
		Response parameters:	<none>

		This procedure is used to read Long Characteristic Value or
		Long Characteristic Descriptor from a server.
		Read results are returned in the Read Long Characteristic
		Value/Descriptor Response event.

		In case of an error, the error response will be returned.

	Opcode 0x0c - Read Multiple Characteristic Values

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handles_Count (1 octet)
					Handles (variable)
		Response parameters:	<none>

		This procedure is used to read multiple Characteristic Values
		from a server.
		Read results are returned in the Read Multiple Characteristic
		Values Response event.

		In case of an error, the error response will be returned.

	Opcode 0x0d - Write Without Response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value to a
		server. There is no acknowledgment that the write was
		successfully performed.

		In case of an error, the error response will be returned.

	Opcode 0x0e - Signed Write Without Response

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value to a
		server. There is no acknowledgment that the write was
		successfully performed. This procedure is intended to be used
		if client and server are bonded, and connected using
		non-encrypted link.

		In case of an error, the error response will be returned.

	Opcode 0x0f - Write Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value or
		Characteristic Descriptor to a server.
		Write status is returned in Write Characteristic
		Value/Descriptor Response event.

		In case of an error, the error response will be returned.

	Opcode 0x10 - Write Long Characteristic Value/Descriptor

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Long Characteristic Value or
		Long Characteristic Descriptor to a server.
		Write status is returned in Write Long Characteristic
		Value/Descriptor Response event.

		In case of an error, the error response will be returned.

	Opcode 0x11 - Reliable Write

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Offset (2 octets)
					Data_Length (2 octets)
					Data (variable)
		Response parameters:	<none>

		This procedure is used to write a Characteristic Value to
		a server and assurance is required that the correct
		Characteristic Value is going to be written.
		Write status is returned in the Reliable Write Response event.

		In case of an error, the error response will be returned.

	Opcode 0x12 - Configure Notifications

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Enable (1 octet)
					CCC_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used to configure server to notify
		characteristic value to a client. Configuration status is
		returned in Configure Notifications Response event.

		In case of an error, the error response will be returned.

	Opcode 0x13 - Configure Indications

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Enable (1 octet)
					CCC_Handle (2 octets)
		Response parameters:	<none>

		This procedure is used to configure server to indicate
		characteristic value to a client. Configuration status is
		returned in Configure Indications Response event.

		In case of an error, the error response will be returned.

	Opcode 0x14 - Read Multiple Variable Characteristic Values

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handles_Count (1 octet)
					Handles (variable)
		Response parameters:	<none>

		This procedure is used to read multiple variable Characteristic
		Values from a server. Handles Count shall be > 1.
		Read results are returned in the Read Multiple Variable
		Characteristic Values Response event.

		In case of an error, the error response will be returned.

Events:
	Opcode 0x80 - MTU exchanged

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					MTU (2 octets)

		This event indicates that MTU exchange was performed and new
		MTU is in use.

	Opcode 0x81 - Discover All Primary Services Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Services_Count (1 octet)
					[array] Service (variable)

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Services_Count shall be set to 0.

	Opcode 0x82 - Discover Primary Service by UUID Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Services_Count (1 octet)
					[array] Service (variable)

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Services_Count shall be set to 0.

	Opcode 0x83 - Find Included Services Response

		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Services_Count (1 octet)
					[array] Included_Service (variable)

		Object Included_Service is defined as:
					Included_Handle (2 octets)
					Type (1 octet)
					Service (7 or 21 octets)

		Valid Type parameter values:
					0x00 = Primary
					0x01 = Secondary

		Object Service is defined as:
					Start_Handle (2 octets)
					End_Group_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Services_Count shall be set to 0.

	Opcode 0x84 - Discover All Characteristics of a Service Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Characteristics_Count (1 octet)
					[array] Characteristic (variable)

		Object Characteristic is defined as:
					Characteristic_Handle (2 octets)
					Value_Handle (2 octets)
					Properties (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Characteristics_Count shall be set to 0.

	Opcode 0x85 - Discover Characteristics by UUID Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Characteristics_Count (1 octet)
					[array] Characteristic (variable)

		Object Characteristic is defined as:
					Characteristic_Handle (2 octets)
					Value_Handle (2 octets)
					Properties (1 octet)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Characteristics_Count shall be set to 0.

	Opcode 0x86 - Discover All Characteristic Descriptors Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Descriptors_Count (1 octet)
					[array] Descriptor (variable)

		Object Descriptor is defined as:
					Descriptor_Handle (2 octets)
					UUID_Length (1 octet)
					UUID (2 or 16 octets)

		Valid UUID_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		If Status is non-zero Descriptors_Count shall be set to 0.

	Opcode 0x87 - Read Characteristic Value/Descriptor Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Data_Length (2 octets)
					Data (variable)

		If Status is non-zero Data_Length shall be set to 0.

	Opcode 0x88 - Read Using Characteristic UUID Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Data_Length (2 octets)
					Value_Len (1 octet)
					Data (variable)

		Data is array of handle-value pairs defined as:
					Handle (2 octets)
					Value (Value_Len octets)

		If Status is non-zero Data_Length shall be set to 0.

	Opcode 0x89 - Read Long Characteristic Value/Descriptor Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Data_Length (2 octets)
					Data (variable)

		If Status is non-zero Data_Length shall be set to 0.

	Opcode 0x8a - Read Multiple Characteristic Values Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Data_Length (2 octets)
					Data (variable)

		If Status is non-zero Data_Length shall be set to 0.

	Opcode 0x8b - Write Characteristic Value/Descriptor Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)

	Opcode 0x8c - Write Long Characteristic Value/Descriptor Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)

	Opcode 0x8d - Reliable Write Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)

	Opcode 0x8e - Configure Notifications Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)

	Opcode 0x8f - Configure Indications Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)

	Opcode 0x90 - Notification/Indication Received

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Type (1 octet)
					Handle (2 octets)
					Data_Length (2 octets)
					Data (variable)

		Valid Type parameter values:
					0x01 = Notification
					0x02 = Indication

		This event indicates that IUT has received notification
		or indication.

	Opcode 0x91 - Read Multiple Variable Characteristic Values Response

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Status (1 octet)
					Data_Length (2 octets)
					Data (variable)

		Data is array of length-value pairs defined as:
					Value_Len (2 octets)
					Value (Value_Len octets)

		If Status is non-zero Data_Length shall be set to 0.

GATT Server Service (ID 7)

Once service is registered it is expected that the database contains all
services and characteristics required by tests supported by IUT.

Commands and responses:

	Opcode 0x01 - Read Supported Commands command/response

		Controller Index:	<non-controller>
		Command parameters:	<none>
		Response parameters:	<supported commands> (variable)

		Each bit in response is a flag indicating if command with
		opcode matching bit number is supported. Bit set to 1 means
		that command is supported. Bit 0 is reserved and shall always
		be set to 0. If specific bit is not present in response (less
		than required bytes received) it shall be assumed that command
		is not supported.

		In case of an error, the error response will be returned.

	Opcode 0x02 - Get Attributes

		Controller Index:	<controller id>
		Command parameters:	Start Handle (2 octets)
					End Handle (2 octets)
					Type_Length (1 octet)
					Type (2 or 16 octets)
		Response parameters:	Attributes_Count (1 octet)
					[array] Attribute (variable)

		Object Attribute is defined as:
					Handle (2 octets)
					Permission (1 octet)
					Type_Length (1 octet)
					Type (2 or 16 octets)

		Valid Type_Length parameter values:
					0x02 = UUID16
					0x10 = UUID128

		This procedure is used to query GATT Server for attributes based
		on given search pattern. Attributes can be searched using
		Attribute Handle range and Attribute Type.

		In case of an error, the error response will be returned.

	Opcode 0x03 - Get Attribute Value

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
		Response parameters:	Value_Length (2 octet)
					Value (variable)

		This procedure is used to query GATT Server for attribute value.

		In case of an error, the error response will be returned.

	Opcode 0x04 - Set Characteristic/Descriptor Value

		Controller Index:	<controller id>
		Command parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Value_Length (2 octet)
					Value (variable)
		Response parameters:	<none>

		This command is used to set the value of characteristic
		or descriptor.

		In case of an error, the error response will be returned.

	Opcode 0x05 - Change Database

		Controller Index:	<controller id>
		Command parameters:	<none>
		Response parameters:	<none>

		This procedure is used to change content of database that will
		result in peer doing database re-discovery. Details of how
		database is changed is IUT specific.

		In case of an error, the error response will be returned.

Events:

	Opcode 0x81 - Attribute Value Changed

		Controller Index:	<controller id>
		Event parameters:	Address_Type (1 octet)
					Address (6 octets)
					Handle (2 octets)
					Data_Length (2 octet)
					Data (variable)

		This event command is used to indicate attribute
		(characteristic or descriptor) value changed.
		Event is triggered when ATT Write operation to Tester GATT
		Server has been performed successfully.
